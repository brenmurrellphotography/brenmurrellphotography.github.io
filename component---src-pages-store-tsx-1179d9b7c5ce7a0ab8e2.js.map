{"version":3,"file":"component---src-pages-store-tsx-1179d9b7c5ce7a0ab8e2.js","mappings":"iMAEO,MCQMA,EAAMC,IAAwD,IAAvD,MAAEC,EAAK,YAAEC,EAAW,SAAEC,EAAQ,SAAEC,GAAiBJ,EACnE,MAAQC,MAAOI,EAAcH,YAAaI,EAAkB,MAAEC,EAAK,QAAEC,EAAO,gBAAEC,IDRjEC,EAAAA,EAAAA,gBAAe,cAchBC,KAAKC,aCJXC,EAAM,CACVZ,MAAOA,GAASI,EAChBH,YAAaA,GAAeI,EAC5BC,MAAM,GAAIC,EAAUD,EACpBO,IAAI,GAAIN,GAAUL,GAAQ,IAC1BM,mBAGF,OACEM,EAAAA,cAAAA,EAAAA,SAAA,KACEA,EAAAA,cAAA,aAAQF,EAAIZ,OACZc,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIX,cACtCa,EAAAA,cAAA,QAAMC,KAAK,QAAQC,QAASJ,EAAIN,QAChCQ,EAAAA,cAAA,QAAMC,KAAK,eAAeC,QAAQ,wBAClCF,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIZ,QACxCc,EAAAA,cAAA,QAAMC,KAAK,cAAcC,QAASJ,EAAIC,MACtCC,EAAAA,cAAA,QAAMC,KAAK,sBAAsBC,QAASJ,EAAIX,cAC9Ca,EAAAA,cAAA,QAAMC,KAAK,gBAAgBC,QAASJ,EAAIN,QACxCQ,EAAAA,cAAA,QAAMC,KAAK,kBAAkBC,QAASJ,EAAIJ,kBAC1CM,EAAAA,cAAA,QAAMG,IAAI,OAAOC,KAAK,oIACrBf,EACA,C,mGCqBP,UAlDcJ,IAAc,IAAb,KAAEoB,GAAMpB,EACS,oBAAXqB,QAAyBA,OAAOC,SAASH,KAC5D,OACEJ,EAAAA,cAAA,YACEA,EAAAA,cAAA,UAAI,cACJA,EAAAA,cAAA,SAAG,0BACHA,EAAAA,cAAA,SAAG,kLAGDA,EAAAA,cAAA,KAAGI,KAAK,gCAA+B,yBAAyB,6DAGlEJ,EAAAA,cAAA,OAAKQ,UAAU,QACVH,EAAKI,SAASC,MAAMC,KAAIC,GACvBZ,EAAAA,cAAA,OAAKQ,UAAU,aACbR,EAAAA,cAACa,EAAAA,KAAI,CAACC,GAAIF,EAAQG,SAAUC,IAAKJ,EAAQK,KAAKC,KAC5ClB,EAAAA,cAAA,OACEQ,UAAU,mBACVW,IAAG,sDAAwDP,EAAQK,KAAKC,IAAG,yBAC3EE,IAAKR,EAAQX,OAEfD,EAAAA,cAAA,KAAGQ,UAAU,iBAAiBI,EAAQX,WAKhDD,EAAAA,cAAA,UAAQQ,UAAU,qBAAoB,0BACjC,EAyBJ,MAAMa,EAAeA,IAAMrB,EAAAA,cAAChB,EAAAA,EAAG,K","sources":["webpack://bren-murrell-photography/./src/hooks/use-site-metadata.tsx","webpack://bren-murrell-photography/./src/components/seo.tsx","webpack://bren-murrell-photography/./src/pages/store.tsx"],"sourcesContent":["import { graphql, useStaticQuery } from \"gatsby\"\n\nexport const useSiteMetadata = () => {\n  const data = useStaticQuery(graphql`\n    query {\n      site {\n        siteMetadata {\n          title\n          description\n          twitterUsername\n          image\n          siteUrl\n        }\n      }\n    }\n  `)\n\n  return data.site.siteMetadata\n}","import React from \"react\"\nimport { useSiteMetadata } from \"../hooks/use-site-metadata\"\n\ninterface Props {\n    title?: string,\n    description?: string,\n    pathname?: string,\n    children?: React.FC[]\n}\n\nexport const SEO = ({ title, description, pathname, children }: Props) => {\n  const { title: defaultTitle, description: defaultDescription, image, siteUrl, twitterUsername } = useSiteMetadata()\n\n  const seo = {\n    title: title || defaultTitle,\n    description: description || defaultDescription,\n    image: `${siteUrl}${image}`,\n    url: `${siteUrl}${pathname || ``}`,\n    twitterUsername,\n  }\n\n  return (\n    <>\n      <title>{seo.title}</title>\n      <meta name=\"description\" content={seo.description} />\n      <meta name=\"image\" content={seo.image} />\n      <meta name=\"twitter:card\" content=\"summary_large_image\" />\n      <meta name=\"twitter:title\" content={seo.title} />\n      <meta name=\"twitter:url\" content={seo.url} />\n      <meta name=\"twitter:description\" content={seo.description} />\n      <meta name=\"twitter:image\" content={seo.image} />\n      <meta name=\"twitter:creator\" content={seo.twitterUsername} />\n      <link rel=\"icon\" href=\"data:image/svg+xml,<svg xmlns='http://www.w3.org/2000/svg' viewBox='0 0 100 100'><text y='0.9em' font-size='90'>ðŸ‘¤</text></svg>\" />\n      {children}\n    </>\n  )\n}","import * as React from \"react\"\r\nimport type { HeadFC, PageProps } from \"gatsby\"\r\nimport { graphql, Link } from \"gatsby\"\r\nimport { SEO } from \"../components/seo\"\r\n\r\nconst Store = ({ data }) => {\r\n  const url = typeof window !== 'undefined' ? window.location.href : '';\r\n  return (\r\n    <main>\r\n      <h1>Buy prints</h1>\r\n      <p>Our store is now live!</p>\r\n      <p>\r\n        The prints are currently only available in 8x6\" format but come in a range of frame colours.\r\n        If there is another print you're interested in or a different size, contact us at\r\n        <a href=\"mailto:hello@brenmurrell.com\">hello@brenmurrell.com</a> or simply pop open the chat at\r\n        the bottom of the screen.\r\n      </p>\r\n      <div className=\"grid\">\r\n          {data.products.nodes.map(product => (\r\n            <div className=\"grid-item\">\r\n              <Link to={product.nameSlug} key={product.meta.sku}>\r\n                <img\r\n                  className=\"grid-item__thumb\"\r\n                  src={`https://bmp-images.s3.ap-southeast-2.amazonaws.com/${product.meta.sku}/8x6/BlackStandard.png`}\r\n                  alt={product.name}\r\n                />\r\n                <p className=\"gallery_thumb\">{product.name}</p>\r\n              </Link>\r\n            </div>\r\n          ))}\r\n      </div>\r\n      <button className=\"snipcart-checkout\">Click here to checkout</button>\r\n    </main>\r\n  )\r\n}\r\n\r\n\r\nexport const query = graphql`\r\n  {\r\n    products: allProduct {\r\n      nodes {\r\n        name\r\n        nameSlug: gatsbyPath(filePath: \"/products/{Product.name}\")\r\n        skuSlug: gatsbyPath(filePath: \"/products/{Product.meta__sku}\")\r\n        price\r\n        meta {\r\n          sku\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\n\r\n\r\nexport default Store\r\n\r\nexport const Head: HeadFC = () => <SEO />\r\n"],"names":["SEO","_ref","title","description","pathname","children","defaultTitle","defaultDescription","image","siteUrl","twitterUsername","useStaticQuery","site","siteMetadata","seo","url","React","name","content","rel","href","data","window","location","className","products","nodes","map","product","Link","to","nameSlug","key","meta","sku","src","alt","Head"],"sourceRoot":""}